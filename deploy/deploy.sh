#!/bin/bash
set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
APP_NAME="sobranie-api"
APP_DIR="/opt/sobranie-api"
CADDY_DIR="/etc/caddy/sites-enabled"
DOCKER_NETWORK="caddy_network"

echo -e "${YELLOW}üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π ${APP_NAME}...${NC}"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
echo -e "${GREEN}üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...${NC}"
mkdir -p ${APP_DIR}
cd ${APP_DIR}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ Docker —Å–µ—Ç–∏
echo -e "${GREEN}üîó –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker —Å–µ—Ç—å...${NC}"
docker network inspect ${DOCKER_NETWORK} >/dev/null 2>&1 || \
    docker network create ${DOCKER_NETWORK}

# –ö–æ–ø–∏—Ä—É–µ–º docker-compose —Ñ–∞–π–ª
echo -e "${GREEN}üìã –ö–æ–ø–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é...${NC}"
cp /tmp/docker-compose.prod.yml ${APP_DIR}/docker-compose.yml

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env.production
if [ ! -f "${APP_DIR}/.env.production" ]; then
    echo -e "${RED}‚ùå –§–∞–π–ª .env.production –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
    echo -e "${YELLOW}üìù –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env.production —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏:${NC}"
    echo "DATABASE_URL=postgresql://..."
    echo "JWT_SECRET=..."
    echo "LOG_LEVEL=info"
    exit 1
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
echo -e "${GREEN}üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é...${NC}"
docker-compose down --remove-orphans || true

# –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–∑
echo -e "${GREEN}üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–∑...${NC}"
docker-compose pull

# –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
echo -e "${GREEN}üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é...${NC}"
docker-compose up -d

# –ñ–¥–µ–º –ø–æ–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
echo -e "${GREEN}‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞...${NC}"
sleep 10

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ
echo -e "${GREEN}üè• –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...${NC}"
if curl -f http://localhost:3010/healthz > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ!${NC}"
else
    echo -e "${RED}‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç!${NC}"
    echo -e "${YELLOW}üìã –õ–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:${NC}"
    docker-compose logs --tail=50
    exit 1
fi

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Caddy –µ—Å–ª–∏ –µ—â–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
if [ ! -f "${CADDY_DIR}/sobranie-api.caddy" ]; then
    echo -e "${GREEN}üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Caddy...${NC}"
    cp /tmp/Caddyfile ${CADDY_DIR}/sobranie-api.caddy
    
    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º Caddy
    echo -e "${GREEN}üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º Caddy...${NC}"
    docker exec caddy caddy reload --config /etc/caddy/Caddyfile
fi

# –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã
echo -e "${GREEN}üßπ –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ Docker –æ–±—Ä–∞–∑—ã...${NC}"
docker image prune -f

echo -e "${GREEN}‚ú® –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!${NC}"
echo -e "${GREEN}üåê API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://api.sobranie.yaropolk.tech${NC}"
echo -e "${GREEN}üìö OpenAPI –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://api.sobranie.yaropolk.tech/openapi${NC}"

#!/bin/bash

# üîß –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–µ–ø–ª–æ—è Sobranie API

set -e  # –í—ã—Ö–æ–¥ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –¥–µ–ø–ª–æ–π Sobranie API..."

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
cd /opt/sobranie-api

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "‚èπÔ∏è  –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose down || true

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π docker-compose.yml
echo "üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π docker-compose.yml..."
curl -fsSL https://raw.githubusercontent.com/kirdro/sobranie_elysia_api/main/docker-compose.prod.yml -o docker-compose.yml

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env.production
if [ ! -f .env.production ]; then
    echo "üìù –°–æ–∑–¥–∞–µ–º .env.production —Ñ–∞–π–ª..."
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–∏–º–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    curl -fsSL https://raw.githubusercontent.com/kirdro/sobranie_elysia_api/main/env.production.example -o .env.production
    
    echo ""
    echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å .env.production!"
    echo "üìù –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –∏ –∏–∑–º–µ–Ω–∏—Ç–µ JWT_SECRET –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∫–ª—é—á:"
    echo "   nano .env.production"
    echo ""
    echo "üîë –ì–µ–Ω–µ—Ä–∞—Ü–∏—è JWT —Å–µ–∫—Ä–µ—Ç–∞:"
    echo "   openssl rand -base64 32"
    echo ""
fi

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p logs
chmod 755 logs

# –ó–∞–≥—Ä—É–∂–∞–µ–º Docker –æ–±—Ä–∞–∑
echo "üê≥ –ó–∞–≥—Ä—É–∂–∞–µ–º Docker –æ–±—Ä–∞–∑..."
docker pull ghcr.io/kirdro/sobranie_elysia_api:latest

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Caddy —Å–µ—Ç—å
echo "üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º Caddy —Å–µ—Ç—å..."
docker network inspect caddy_network >/dev/null 2>&1 || docker network create caddy_network

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
docker-compose up -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
sleep 15

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker-compose ps

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
echo ""
echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:"
docker-compose logs --tail=20

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API..."
if curl -f http://localhost:3010/healthz > /dev/null 2>&1; then
    echo "‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ localhost:3010!"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Caddy –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if curl -f https://api.sobranie.yaropolk.tech/healthz > /dev/null 2>&1; then
        echo "‚úÖ API –¥–æ—Å—Ç—É–ø–Ω–æ —á–µ—Ä–µ–∑ HTTPS!"
    else
        echo "‚ö†Ô∏è  API —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ, –Ω–æ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ —á–µ—Ä–µ–∑ HTTPS"
        echo "   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Caddy"
    fi
else
    echo "‚ùå API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ localhost:3010"
    echo "   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose logs"
fi

echo ""
echo "üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üìã –î–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:"
echo "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .env.production —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º JWT_SECRET"
echo "2. –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Caddy –¥–ª—è api.sobranie.yaropolk.tech"
echo "3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ: docker-compose down && docker-compose up -d"
